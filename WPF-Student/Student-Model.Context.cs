//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPF_Student
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StudentEntities : DbContext
    {
        public StudentEntities()
            : base("name=StudentEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Предметы> Предметы { get; set; }
        public virtual DbSet<Специальности> Специальности { get; set; }
        public virtual DbSet<Студенты> Студенты { get; set; }
    
        [DbFunction("StudentEntities", "Отображение_студентов_возраст_которых_меньше_заданного")]
        public virtual IQueryable<Отображение_студентов_возраст_которых_меньше_заданного_Result> Отображение_студентов_возраст_которых_меньше_заданного(Nullable<int> age)
        {
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Отображение_студентов_возраст_которых_меньше_заданного_Result>("[StudentEntities].[Отображение_студентов_возраст_которых_меньше_заданного](@Age)", ageParameter);
        }
    
        [DbFunction("StudentEntities", "Функция_отбора_по_возрасту_общие")]
        public virtual IQueryable<Функция_отбора_по_возрасту_общие_Result> Функция_отбора_по_возрасту_общие()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Функция_отбора_по_возрасту_общие_Result>("[StudentEntities].[Функция_отбора_по_возрасту_общие]()");
        }
    
        [DbFunction("StudentEntities", "Функция_отбора_фио")]
        public virtual IQueryable<Функция_отбора_фио_Result> Функция_отбора_фио(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Функция_отбора_фио_Result>("[StudentEntities].[Функция_отбора_фио](@Name)", nameParameter);
        }
    
        [DbFunction("StudentEntities", "Функция_среднего_балла")]
        public virtual IQueryable<Функция_среднего_балла_Result> Функция_среднего_балла()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Функция_среднего_балла_Result>("[StudentEntities].[Функция_среднего_балла]()");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Количество_дней_до_дня_рождения_Result> Количество_дней_до_дня_рождения(string fIO)
        {
            var fIOParameter = fIO != null ?
                new ObjectParameter("FIO", fIO) :
                new ObjectParameter("FIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Количество_дней_до_дня_рождения_Result>("Количество_дней_до_дня_рождения", fIOParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Отбор_студентов_по_специальности(string spec)
        {
            var specParameter = spec != null ?
                new ObjectParameter("Spec", spec) :
                new ObjectParameter("Spec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Отбор_студентов_по_специальности", specParameter);
        }
    
        public virtual ObjectResult<Отбор_студентов_по_форме_обучения_Result> Отбор_студентов_по_форме_обучения(Nullable<int> form)
        {
            var formParameter = form.HasValue ?
                new ObjectParameter("Form", form) :
                new ObjectParameter("Form", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Отбор_студентов_по_форме_обучения_Result>("Отбор_студентов_по_форме_обучения", formParameter);
        }
    
        public virtual ObjectResult<Отображение_студентов_по_адресу_Result> Отображение_студентов_по_адресу(string adres)
        {
            var adresParameter = adres != null ?
                new ObjectParameter("Adres", adres) :
                new ObjectParameter("Adres", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Отображение_студентов_по_адресу_Result>("Отображение_студентов_по_адресу", adresParameter);
        }
    
        public virtual ObjectResult<Отображение_студентов_по_возрасту_Result> Отображение_студентов_по_возрасту(Nullable<int> age)
        {
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Отображение_студентов_по_возрасту_Result>("Отображение_студентов_по_возрасту", ageParameter);
        }
    
        public virtual ObjectResult<Отображение_студентов_по_среднему_баллу_Result> Отображение_студентов_по_среднему_баллу(Nullable<float> grade)
        {
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Отображение_студентов_по_среднему_баллу_Result>("Отображение_студентов_по_среднему_баллу", gradeParameter);
        }
    
        public virtual ObjectResult<Отображение_студентов_по_ФИО_Result> Отображение_студентов_по_ФИО(string fIO)
        {
            var fIOParameter = fIO != null ?
                new ObjectParameter("FIO", fIO) :
                new ObjectParameter("FIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Отображение_студентов_по_ФИО_Result>("Отображение_студентов_по_ФИО", fIOParameter);
        }
    
        public virtual ObjectResult<Отображение_студентов__сдавших_определённый_предмет_на_определённую_оценку_Result> Отображение_студентов__сдавших_определённый_предмет_на_определённую_оценку(string objects, Nullable<int> mark)
        {
            var objectsParameter = objects != null ?
                new ObjectParameter("Objects", objects) :
                new ObjectParameter("Objects", typeof(string));
    
            var markParameter = mark.HasValue ?
                new ObjectParameter("Mark", mark) :
                new ObjectParameter("Mark", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Отображение_студентов__сдавших_определённый_предмет_на_определённую_оценку_Result>("Отображение_студентов__сдавших_определённый_предмет_на_определённую_оценку", objectsParameter, markParameter);
        }
    
        public virtual ObjectResult<Отображение_студентов__средний_балл_которых_в_диапазоне_Result> Отображение_студентов__средний_балл_которых_в_диапазоне(Nullable<int> left, Nullable<int> right)
        {
            var leftParameter = left.HasValue ?
                new ObjectParameter("left", left) :
                new ObjectParameter("left", typeof(int));
    
            var rightParameter = right.HasValue ?
                new ObjectParameter("right", right) :
                new ObjectParameter("right", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Отображение_студентов__средний_балл_которых_в_диапазоне_Result>("Отображение_студентов__средний_балл_которых_в_диапазоне", leftParameter, rightParameter);
        }
    
        public virtual ObjectResult<Отображение_студетов_по_заданному_возрасту_Result> Отображение_студетов_по_заданному_возрасту(Nullable<int> age)
        {
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Отображение_студетов_по_заданному_возрасту_Result>("Отображение_студетов_по_заданному_возрасту", ageParameter);
        }
    
        public virtual ObjectResult<Nullable<float>> Среднее_трёх_величин(Nullable<float> value1, Nullable<float> value2, Nullable<float> value3)
        {
            var value1Parameter = value1.HasValue ?
                new ObjectParameter("Value1", value1) :
                new ObjectParameter("Value1", typeof(float));
    
            var value2Parameter = value2.HasValue ?
                new ObjectParameter("Value2", value2) :
                new ObjectParameter("Value2", typeof(float));
    
            var value3Parameter = value3.HasValue ?
                new ObjectParameter("Value3", value3) :
                new ObjectParameter("Value3", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<float>>("Среднее_трёх_величин", value1Parameter, value2Parameter, value3Parameter);
        }
    }
}
